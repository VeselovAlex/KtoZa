// Generated by CoffeeScript 1.10.0
(function() {
  var App, NoPoll, NotLoaded, Option, Poll, Question;

  App = React.createClass({
    getInitialState: function() {
      return {
        loaded: false
      };
    },
    componentDidMount: function() {
      return $.ajax({
        url: this.props.pollURL,
        dataType: "json",
        cache: false,
        success: (function(_this) {
          return function(poll) {
            return _this.setState({
              loaded: true,
              poll: poll
            });
          };
        })(this),
        error: (function(_this) {
          return function() {
            return _this.setState({
              loaded: true,
              poll: null
            });
          };
        })(this)
      });
    },
    render: function() {
      if (!this.state.loaded) {
        return <NotLoaded />;
      }
      if (!this.state.poll) {
        return <NoPoll />;
      }
      return <Poll poll={this.state.poll}/>;
    }
  });

  NotLoaded = React.createClass({
    render: function() {
      return <div>Загрузка...</div>;
    }
  });

  NoPoll = React.createClass({
    render: function() {
      return (
            <div>Нет опроса. Повторите запрос позднее.</div>
        );
    }
  });

  Poll = React.createClass({
    render: function() {
      var poll, questions;
      poll = this.props.poll;
      questions = poll.questions.map(function(q, n) {
        return <Question data={q} key={n} name={n}/>;
      });
      return (
        <section>
          <header>
            <h1>{poll.title}</h1>
            <p>{poll.caption}</p>
          </header>
          <div>
            <h2>Вопросы</h2>
            {questions}
          </div>
        </section>
        );
    }
  });

  Question = React.createClass({
    select: function(e) {
      return console.log(e);
    },
    render: function() {
      var name, options, q, select;
      q = this.props.data;
      name = this.props.name;
      select = this.select;
      options = q.options.map(function(o, n) {
        return <Option data={o} type={q.type} key={n} name={name} value={n} select={select}/>;
      });
      return (
          <div>
            <h3>{this.props.data.text}</h3>
            {options}
          </div>
        );
    }
  });

  Option = React.createClass({
    render: function() {
      var input, name, type, value;
      type = this.props.type;
      input = "";
      if (type === 'single-option') {
        input = "radio";
      } else if (type === 'multi-option') {
        input = "checkbox";
      } else {
        console.log("Bad question type");
        return <span>Bad question</span>;
      }
      name = this.props.name;
      value = this.props.value;
      return <li><input type={input} name={name} value={value} onChange={this.props.select}/>{this.props.data}</li>;
    }
  });

  ReactDOM.render(<App pollURL="/testapi/poll.json"/>, $("#app")[0]);

}).call(this);
